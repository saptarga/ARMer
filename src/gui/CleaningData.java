/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CleaningData.java
 *
 * Created on Apr 1, 2011, 7:15:05 PM
 */
package gui;

import java.awt.Component;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import model.CleanerController;

/**
 *
 * @author rhapsodixx
 */
public class CleaningData extends javax.swing.JFrame {

    private boolean tanggal = false;
    private boolean fuzzy = false;

    /** Creates new form CleaningData */
    public CleaningData() {
        initComponents();
        this.setIconImage(new ImageIcon("src/gui/icon.png").getImage());
        setLocation((int) Toolkit.getDefaultToolkit().getScreenSize().getWidth() / 2 - (int) this.getSize().getWidth() / 2, (int) Toolkit.getDefaultToolkit().getScreenSize().getHeight() / 2 - (int) this.getSize().getHeight() / 2);
        maxitemText.setEditable(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        maxitemLabel = new javax.swing.JLabel();
        maxitemText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        startchooser = new com.toedter.calendar.JDateChooser();
        endchooser = new com.toedter.calendar.JDateChooser();
        bydatecheck = new javax.swing.JCheckBox();
        maxitemcheck = new javax.swing.JCheckBox();
        clean = new javax.swing.JButton();
        emptybutton = new javax.swing.JButton();
        loading = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Data Cleaner");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        maxitemLabel.setText("Maximum Item Threshold");

        maxitemText.setEditable(false);

        jLabel3.setText("from");

        jLabel4.setText("until");

        startchooser.setEnabled(false);

        endchooser.setEnabled(false);

        bydatecheck.setText("Date");
        bydatecheck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bydatecheckItemStateChanged(evt);
            }
        });

        maxitemcheck.setText("MaxItem");
        maxitemcheck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                maxitemcheckItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bydatecheck)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(startchooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(endchooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxitemcheck)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(maxitemLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(maxitemText, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)))
                        .addGap(14, 14, 14))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(bydatecheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(startchooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(endchooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addComponent(maxitemcheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxitemLabel)
                    .addComponent(maxitemText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        clean.setText("Clean it !");
        clean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanActionPerformed(evt);
            }
        });

        emptybutton.setText("empty !");
        emptybutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emptybuttonActionPerformed(evt);
            }
        });

        loading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/loading6.gif"))); // NOI18N
        loading.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(emptybutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clean))
                    .addComponent(loading, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clean)
                    .addComponent(emptybutton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanActionPerformed
        // TODO add your handling code here:
        loading.setEnabled(true);
        CleanerController c = new CleanerController();
        Date from = startchooser.getDate();
        Date until = endchooser.getDate();

        if (tanggal == false && fuzzy == false) {
            c.getDataQualified();
            
        } else if (tanggal == true && fuzzy == false) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String fromStr = sdf.format(from);
            SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd");
            String untilStr = sdf2.format(until);
            c.getDataQualifiedByDate(fromStr, untilStr);

        } else if (tanggal == false && fuzzy == true) {
            int max = Integer.parseInt(maxitemText.getText());
            c.getDataQualifiedFuzzy(max);

        } else if (tanggal == true && fuzzy == true) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String fromStr = sdf.format(from);
            SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd");
            String untilStr = sdf2.format(until);
            int max = Integer.parseInt(maxitemText.getText());
            c.getDataQualifiedFuzzyByDate(fromStr, untilStr, max);
        }
        Component frame = null;
        JOptionPane.showMessageDialog(frame, "Transaksi Done");
        dispose();
    }//GEN-LAST:event_cleanActionPerformed

    private void bydatecheckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bydatecheckItemStateChanged
        // TODO add your handling code here:
        Object source = evt.getItemSelectable();
        if (source == bydatecheck) {
            startchooser.setEnabled(true);
            endchooser.setEnabled(true);
            tanggal = true;
        }
        if (evt.getStateChange() == java.awt.event.ItemEvent.DESELECTED) {
            startchooser.setEnabled(false);
            endchooser.setEnabled(false);
            tanggal = false;
        }
    }//GEN-LAST:event_bydatecheckItemStateChanged

    private void maxitemcheckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_maxitemcheckItemStateChanged
        // TODO add your handling code here:
        Object source = evt.getItemSelectable();
        if (source == maxitemcheck) {
            maxitemText.setEditable(true);
            fuzzy = true;
        }
        if (evt.getStateChange() == java.awt.event.ItemEvent.DESELECTED) {
            maxitemText.setEditable(false);
            fuzzy = false;
        }
    }//GEN-LAST:event_maxitemcheckItemStateChanged

    private void emptybuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emptybuttonActionPerformed
        // TODO add your handling code here:
        CleanerController c = new CleanerController();
        c.truncateTableT();
        Component frame = null;
        JOptionPane.showMessageDialog(frame, "Transaction temp truncated");
    }//GEN-LAST:event_emptybuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new CleaningData().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox bydatecheck;
    private javax.swing.JButton clean;
    private javax.swing.JButton emptybutton;
    private com.toedter.calendar.JDateChooser endchooser;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel loading;
    private javax.swing.JLabel maxitemLabel;
    private javax.swing.JTextField maxitemText;
    private javax.swing.JCheckBox maxitemcheck;
    private com.toedter.calendar.JDateChooser startchooser;
    // End of variables declaration//GEN-END:variables
}
